{
    "openapi": "3.0.0",
    "info": {
        "title": "Chhaysok Visal Fake Mart API",
        "description": "Swagger documentation for Fake Mart API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/branch/lists": {
            "get": {
                "tags": [
                    "Branch"
                ],
                "summary": "Fetch all Branch",
                "operationId": "1a7f8e78ade478b8a54d3769e7b1910b",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/branch/create": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Create new Branch",
                "operationId": "fab238b34aa9799a27eca85eda3b4ec8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "location",
                                    "contact_number"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Main Branch"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Phnom Penh"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "555-1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch created successfully"
                                        },
                                        "new_branch": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "contact_number": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/update": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Update Branch",
                "operationId": "8567a53a51ac0a5bf91edb6f23e4f1ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "location",
                                    "contact_number"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Branch"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "123 Updated St"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "555-1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Update Complete"
                                        },
                                        "updated_branch": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Branch not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_branch": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/branch/delete": {
            "post": {
                "tags": [
                    "Branch"
                ],
                "summary": "Delete a branch",
                "operationId": "49e5060c9700e82eae2a3008497a80bc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Branch deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Delete Complete"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "deleted_branch": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "contact_number": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Branch not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Branch not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_branch": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "location": {
                                                        "type": "string"
                                                    },
                                                    "contact_number": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/lists": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Fetch all Categories",
                "operationId": "c796ea0d94ef3805fc5113934595215a",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/category/create": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create new Category",
                "operationId": "720fa91edfe99b9c6a4b68e1aa33871a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Electronics"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Electronic devices"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "new_category": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/update": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Update Category",
                "operationId": "28296eb0f5830c40af4e4afe34227fb7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Update Complete"
                                        },
                                        "updated_category": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_category": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/delete": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category",
                "operationId": "e96b7918ddcf600bb3c212c762db9ac0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Delete Complete"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "deleted_category": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_category": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice/lists": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Fetch all Invoices",
                "operationId": "55db29681e651ae64dc501be1a52d68d",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/invoice/create": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Create new Invoice",
                "operationId": "c2006b333b513dae339de62d3d835fb0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "total"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "total": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Invoice created successfully"
                                        },
                                        "new_invoice": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice/update": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update Invoice",
                "operationId": "ec244f848244f7cd5bdbbe3820911303",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "user_id",
                                    "total"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "total": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 149.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Update Complete"
                                        },
                                        "updated_invoice": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_invoice": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice/delete": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Delete an invoice",
                "operationId": "49a4e797876b7533babd9837cd121bc5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Delete Complete"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "deleted_invoice": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_invoice": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "user_id": {
                                                        "type": "integer"
                                                    },
                                                    "total": {
                                                        "type": "number",
                                                        "format": "float"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice_item/lists": {
            "get": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Fetch all Invoice Items",
                "operationId": "2b47d3f8e84bed2ab3ef664483aa1586",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/invoice_item/create": {
            "post": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Create new Invoice Item",
                "operationId": "2c8a3f7c2ba761821b60e786dd842934",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "invoice_id",
                                    "product_id",
                                    "qty",
                                    "price"
                                ],
                                "properties": {
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 19.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice Item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Invoice Item created successfully"
                                        },
                                        "new_invoice_item": {
                                            "properties": {
                                                "invoice_id": {
                                                    "type": "integer"
                                                },
                                                "product_id": {
                                                    "type": "integer"
                                                },
                                                "qty": {
                                                    "type": "integer"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "invoice_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The invoice_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice_item/update": {
            "post": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Update Invoice Item",
                "operationId": "daaf25ea6bee97088431058b487befcd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "invoice_id",
                                    "product_id",
                                    "qty",
                                    "price"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "invoice_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "qty": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 24.99
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice Item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Update Complete"
                                        },
                                        "updated_invoice_item": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Invoice Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Invoice Item not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_invoice_item": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice_item/delete": {
            "post": {
                "tags": [
                    "InvoiceItem"
                ],
                "summary": "Delete an invoice item",
                "operationId": "3763c19de96ae81378defe975b783e54",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice Item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Delete Complete"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "deleted_invoice_item": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "invoice_id": {
                                                    "type": "integer"
                                                },
                                                "product_id": {
                                                    "type": "integer"
                                                },
                                                "qty": {
                                                    "type": "integer"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Invoice Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Invoice Item not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_invoice_item": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "invoice_id": {
                                                        "type": "integer"
                                                    },
                                                    "product_id": {
                                                        "type": "integer"
                                                    },
                                                    "qty": {
                                                        "type": "integer"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/lists": {
            "get": {
                "tags": [
                    "Position"
                ],
                "summary": "Fetch all Positions",
                "operationId": "1758acd13a03702f7cf1afcf5d8d79f8",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/position/create": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Create new Position",
                "operationId": "8f4a6e890f836f3149baac8168b31822",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "branch_id",
                                    "name"
                                ],
                                "properties": {
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Manager"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Store manager position"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Position created successfully"
                                        },
                                        "new_position": {
                                            "properties": {
                                                "branch_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "branch_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The branch_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/update": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Update Position",
                "operationId": "b499606483347197ac7e4b42fe4e142a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "branch_id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Position"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Update Complete"
                                        },
                                        "updated_position": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Position not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_position": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/position/delete": {
            "post": {
                "tags": [
                    "Position"
                ],
                "summary": "Delete a position",
                "operationId": "afdf56ba1ac10e885785bdae3704c83a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Delete Complete"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "deleted_position": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "branch_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Position not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_position": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "branch_id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/lists": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Fetch all Products",
                "operationId": "e37cc2531cc6e7e043ddfd9b70a3f1ce",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/product/create": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create new Product",
                "operationId": "c514b2e3b3f5bb8eb8137b7ccc94313b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_name",
                                    "cost",
                                    "price",
                                    "category_id"
                                ],
                                "properties": {
                                    "product_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Smartphone"
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 200.5
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 299.99
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "product.jpg"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Latest smartphone model"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        },
                                        "new_product": {
                                            "properties": {
                                                "product_name": {
                                                    "type": "string"
                                                },
                                                "cost": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "image": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "category_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "product_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The product_name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/update": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Update Product",
                "operationId": "6b580dcabcb104c1e05c926585d78625",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "product_name",
                                    "cost",
                                    "price",
                                    "category_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Smartphone"
                                    },
                                    "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 250.5
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 349.99
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "updated_product.jpg"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Update Complete"
                                        },
                                        "updated_product": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_product": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/delete": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "operationId": "75238386967fd945d346c7ad400d8ca7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Delete Complete"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "deleted_product": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "product_name": {
                                                    "type": "string"
                                                },
                                                "cost": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "image": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "category_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_product": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "product_name": {
                                                        "type": "string"
                                                    },
                                                    "cost": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "image": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "category_id": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/lists": {
            "get": {
                "tags": [
                    "Staff"
                ],
                "summary": "Fetch all Staff",
                "operationId": "9b63e3e05de3e8004b6217b62a977e54",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/staff/create": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Create new Staff",
                "operationId": "cce77fe9c47edac174825e810e5015ce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "position_id",
                                    "name",
                                    "dob",
                                    "pob",
                                    "address",
                                    "phone",
                                    "national_id_card"
                                ],
                                "properties": {
                                    "position_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "pob": {
                                        "type": "string",
                                        "example": "Phnom Penh"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Street, Phnom Penh"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "012345678"
                                    },
                                    "national_id_card": {
                                        "type": "string",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Staff created successfully"
                                        },
                                        "new_staff": {
                                            "properties": {
                                                "position_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "type": "string"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "pob": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "national_id_card": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "position_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The position_id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 422
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/update": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Update Staff",
                "operationId": "419d553567f5d38a5e1d35e3764debd4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "position_id",
                                    "name",
                                    "dob",
                                    "pob",
                                    "address",
                                    "phone",
                                    "national_id_card"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Name"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "female"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "pob": {
                                        "type": "string",
                                        "example": "Updated POB"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Updated Address"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "098765432"
                                    },
                                    "national_id_card": {
                                        "type": "string",
                                        "example": "987654321"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Update Complete"
                                        },
                                        "updated_staff": {
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Staff not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Staff not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_staff": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff/delete": {
            "post": {
                "tags": [
                    "Staff"
                ],
                "summary": "Delete a staff",
                "operationId": "f2db2761e1e7b4fcad1b8aa0b28a8587",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Delete Complete"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "deleted_staff": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "position_id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "type": "string"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "pob": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "national_id_card": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Staff not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Staff not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "all_current_staff": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "position_id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "gender": {
                                                        "type": "string"
                                                    },
                                                    "dob": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "pob": {
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "type": "string"
                                                    },
                                                    "national_id_card": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Branch",
            "description": "Branch"
        },
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "Invoice",
            "description": "Invoice"
        },
        {
            "name": "InvoiceItem",
            "description": "InvoiceItem"
        },
        {
            "name": "Position",
            "description": "Position"
        },
        {
            "name": "Product",
            "description": "Product"
        },
        {
            "name": "Staff",
            "description": "Staff"
        }
    ]
}